{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","value","onChange","target","required","type","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseDate","id","Math","random","toString","onAddExpense","Card","classes","children","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesFilter","selectedFilterYear","onYearFilter","ExpensesList","items","length","map","item","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","setYear","filteredExpenses","filter","selectedYear","Dummy_Expenses","App","setExpenses","console","log","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6e5d718.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    \r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input value={enteredTitle} onChange={titleChangeHandler} required type=\"text\" />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            value= {enteredAmount}\r\n            onChange={amountChangeHandler}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            value= {enteredDate}\r\n            onChange={dateChangeHandler}\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React , { useState } from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nconst NewExpense = (props) => {\r\n    const [isEditing , setIsEditing] = useState(false);\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    const saveExpenseHandler = (enteredExpenseDate) => {\r\n        const expenseData = {\r\n            ...enteredExpenseDate,\r\n            id : Math.random().toString()\r\n        };\r\n        \r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n           {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button> }\r\n           {isEditing && <ExpenseForm onCancel={stopEditingHandler} onSaveExpenseData={saveExpenseHandler}/> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import \"./Card.css\";\r\nconst Card =(props) => {\r\n    const classes ='card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month= props.date.toLocaleString('en-US' , {month: 'long'});\r\n    const day= props.date.toLocaleString('en-Us', {day: '2-digit'});\r\n    const year= props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n          <div className=\"expense-date__month\">{month}</div>\r\n          <div className=\"expanse-date__year\">{year}</div>\r\n          <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;","import { useState } from 'react';\r\nimport './ExpenseItem.css';\r\nimport Card from '../UI/Card.js';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nconst ExpenseItem = (props) => {\r\n   const [title ,setTitle] = useState(props.title) \r\n\r\n    const clickHandler = () => {\r\n      console.log('CLICKED!!');\r\n      setTitle('UPDATED!!!')\r\n    }  ;\r\n\r\n\r\n  return (\r\n    <li>\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n     \r\n    </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React, { useState } from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  \r\n\r\n  const dropdownChangeHandler = (event) => {\r\n    \r\n    props.onYearFilter(event.target.value);\r\n  };\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selectedFilterYear} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\nconst ExpensesList  = (props) => {\r\n    \r\n    if(props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no Expenses.</h2>\r\n    }\r\n    \r\n\r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map((item) => (\r\n        <ExpenseItem\r\n          key={item.id}\r\n          title={item.title}\r\n          amount={item.amount}\r\n          date={item.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n};\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0) {\r\n        barFillHeight= Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = (props) => {\r\n\r\n    const dataPointValues= props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        {label:'Jan' , value:0 },\r\n        {label:'Feb' , value:0 },\r\n        {label:'Mar' , value:0 },\r\n        {label:'Apr' , value:0 },\r\n        {label:'May' , value:0 },\r\n        {label:'Jun' , value:0 },\r\n        {label:'Jul' , value:0 },\r\n        {label:'Aug' , value:0 },\r\n        {label:'Sept' , value:0 },\r\n        {label:'Oct' , value:0 },\r\n        {label:'Nov' , value:0 },\r\n        {label:'Dec' , value:0 },\r\n       \r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount; \r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n  const [year, setYear] = useState(2020);\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selectedFilterYear={year}\r\n          onYearFilter={filterChangeHandler}\r\n          />\r\n          <ExpensesChart expenses={filteredExpenses}/>\r\n        <ExpensesList items={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst Dummy_Expenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(Dummy_Expenses);\n\n  const addExpenseHandler = (expense) => {\n    console.log(expense);\n    setExpenses((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n\n     <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}